package ${package}.${moduleName}.rest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import ${package}.${moduleName}.component.domain.${className};
import ${package}.${moduleName}.dto.form.${className}Form;
import ${package}.${moduleName}.component.service.${className}Service;
import com.blackey.common.result.Result;
import com.blackey.mybatis.utils.PageUtils;



/**
 * ${comments} API REST
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Rest extends AbstractController {

    private static final Logger LOGGER = LoggerFactory.getLogger(${className}Rest.class);

    @Autowired
    private ${className}Service ${classname}Service;


    /**
    * 分页列表
    */
    @RequestMapping("/list/page")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public Result list(@RequestParam Map<String, Object> params){
        PageUtils page = ${classname}Service.queryPage(params);

        return success(page);
    }

    /**
     * 列表
     */
    @RequestMapping("/list")
    public Result list(@RequestBody ${className}Form ${classname}Form){
        //TODO
        return success();
    }


    /**
     * 查看详情信息
     */
    @RequestMapping("/info/{${pk.attrname}}")
    public Result info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){

        ${className} ${classname} = ${classname}Service.getById(${pk.attrname});

        return success(${classname});
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    public Result save(@RequestBody ${className}Form ${classname}Form){

        ${className} ${classname} = new ${className}();
        //Form --> domain
        BeanUtils.copyProperties(${classname}Form,${classname});

        ${classname}Service.save(${classname});

        return success();
    }

    /**
     * 修改
     */
    @PostMapping("/update")
    public Result update(@RequestBody ${className} ${classname}){

        ${classname}Service.updateById(${classname});//全部更新
        
        return success();
    }

    /**
     * 根据主键id删除
     */
    @RequestMapping("/delete/{${pk.attrname}}")
    public Result delete(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){

        ${classname}Service.removeById(${pk.attrname});

        return success();
    }

}
